@model BankStatementAnalyzer.Models.SystemSetting

@{
    ViewBag.Title = "Index";
    ViewBag.MainHeading = "System Setting Details";
    ViewBag.BoxHeader = " Create System Setting";
}

@if (ViewBag.IsExist != null)
{
    <div class="alert alert-danger alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
        @ViewBag.IsExist
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.SettingTypeValue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.SettingTypeValue, EnumHelper.GetSelectList(typeof(BankStatementAnalyzer.Models.SettingType)), "Select Area", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SettingTypeValue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autocomplete = "Off" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control", @autocomplete = "Off" } })
            @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control", @autocomplete = "Off" } })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-6">
            @Html.Partial("FooterButtonsPV")
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

